server:
  port: 8082

log-collector:
  watch-directories: /tmp/logs
  file-patterns: "*.log"
  batch-size: 100
  flush-interval: 5s

spring:
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
      batch-size: 16384
      linger-ms: 5
      compression-type: snappy
  
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 1.0

resilience4j:
  circuitbreaker:
    instances:
      kafka-producer:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
  retry:
    instances:
      kafka-producer:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2

logging:
  level:
    com.example.logprocessor: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
